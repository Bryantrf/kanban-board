{"ast":null,"code":"var _jsxFileName = \"/Users/bryantrijo/Dev/React/kanban-board/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { css } from '@emotion/css';\n\n//Components\nimport Header from './components/ui/header';\nimport Board from './components/ui/board';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const main = {\n    boards: [{\n      id: 1,\n      key: \"To Do\",\n      cards: [{\n        id: 1,\n        title: \"Title\",\n        description: \"des\",\n        tag: \"SEO\",\n        assignee: \"BR\",\n        duedate: \"23\",\n        state: \"Todo\"\n      }, {\n        id: 2,\n        title: \"Title\",\n        description: \"des\",\n        tag: \"SEO\",\n        assignee: \"BR\",\n        duedate: \"23\",\n        state: \"Todo\"\n      }]\n    }, {\n      id: 2,\n      key: \"In process\",\n      cards: []\n    }, {\n      id: 3,\n      key: \"Done\",\n      cards: []\n    }]\n  };\n  const [boards, setBoards] = useState(JSON.parse(localStorage.getItem(\"main\")) || [main]);\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\"\n  });\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    console.log(1);\n    setBoards(tempBoards);\n  };\n  const dragEnded = (bid, cid) => {\n    var _boards$s_boardIndex, _boards$s_boardIndex$, _boards$t_boardIndex, _boards$t_boardIndex$;\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex(item => item.id === bid);\n    if (s_boardIndex < 0) return;\n    s_cardIndex = (_boards$s_boardIndex = boards[s_boardIndex]) === null || _boards$s_boardIndex === void 0 ? void 0 : (_boards$s_boardIndex$ = _boards$s_boardIndex.cards) === null || _boards$s_boardIndex$ === void 0 ? void 0 : _boards$s_boardIndex$.findIndex(item => item.id === cid);\n    if (s_cardIndex < 0) return;\n    t_boardIndex = boards.findIndex(item => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n    t_cardIndex = (_boards$t_boardIndex = boards[t_boardIndex]) === null || _boards$t_boardIndex === void 0 ? void 0 : (_boards$t_boardIndex$ = _boards$t_boardIndex.cards) === null || _boards$t_boardIndex$ === void 0 ? void 0 : _boards$t_boardIndex$.findIndex(item => item.id === targetCard.cid);\n    if (t_cardIndex < 0) return;\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n    setTargetCard({\n      bid: \"\",\n      cid: \"\"\n    });\n  };\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid\n    });\n  };\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    tempBoards[index].cards[cardIndex] = card;\n    setBoards(tempBoards);\n  };\n  useEffect(() => {\n    const main = JSON.parse(localStorage.getItem('main'));\n    if (main == null) {\n      localStorage.setItem(\"main\", JSON.stringify(boards));\n    }\n  }, [boards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css`height: 100vh; width: 100%; display: flex; flex-direction: column; border-radius: 4px; gap:20px;`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`flex:1; width:100%; overflow-x:auto; padding: 20px;`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css`min-width: 100%; display: flex; gap:30px;`,\n        children: main.boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n          board: board,\n          addCard: addCardHandler,\n          removeCard: removeCard,\n          dragEnded: dragEnded,\n          dragEntered: dragEntered,\n          updateCard: updateCard\n        }, board.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x4RX7eWRiI0g6ARxiqyscqGVl9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","css","Header","Board","useEffect","useState","App","main","boards","id","key","cards","title","description","tag","assignee","duedate","state","setBoards","JSON","parse","localStorage","getItem","targetCard","setTargetCard","bid","cid","addCardHandler","index","findIndex","item","tempBoards","push","Date","now","Math","random","labels","date","tasks","removeCard","cardIndex","splice","console","log","dragEnded","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","dragEntered","updateCard","card","setItem","stringify","map","board"],"sources":["/Users/bryantrijo/Dev/React/kanban-board/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { css } from '@emotion/css'\n\n//Components\nimport Header from './components/ui/header'\nimport Board from './components/ui/board'\nimport { useEffect, useState } from 'react';\n\n\n\nfunction App() {\n\n  const main= {\n\n  boards: [\n    {\n      id: 1,\n      key: \"To Do\",\n      cards: [{\n        id: 1,\n        title: \"Title\",\n        description: \"des\",\n        tag: \"SEO\",\n        assignee: \"BR\",\n        duedate: \"23\",\n        state: \"Todo\"\n      },\n      {\n        id: 2,\n        title: \"Title\",\n        description: \"des\",\n        tag: \"SEO\",\n        assignee: \"BR\",\n        duedate: \"23\",\n        state: \"Todo\"\n      },\n      ]\n    },\n    {\n      id: 2,\n      key: \"In process\",\n      cards: []\n    },\n    {\n      id: 3,\n      key: \"Done\",\n      cards: []\n    }\n  ]\n}\n\n  const [boards, setBoards] = useState(\n    JSON.parse(localStorage.getItem(\"main\")) || [main]\n  );\n\n\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    console.log(1)\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\n    if (s_boardIndex < 0) return;\n\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n      (item) => item.id === cid\n    );\n    if (s_cardIndex < 0) return;\n\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cid\n    );\n    if (t_cardIndex < 0) return;\n\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n\n    setTargetCard({\n      bid: \"\",\n      cid: \"\",\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid,\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    const main = JSON.parse(localStorage.getItem('main'));\n    if (main == null) {\n      localStorage.setItem(\"main\", JSON.stringify(boards));\n    }\n  }, [boards])\n\n  return (\n\n\n    <div className={css`height: 100vh; width: 100%; display: flex; flex-direction: column; border-radius: 4px; gap:20px;`}>\n      <Header />\n      <div className={css`flex:1; width:100%; overflow-x:auto; padding: 20px;`} >\n        <div className={css`min-width: 100%; display: flex; gap:30px;`} >\n          {main.boards.map(board =>\n            <Board\n              key={board.id}\n              board={board}\n              addCard={addCardHandler}\n              removeCard={removeCard}\n              dragEnded={dragEnded}\n              dragEntered={dragEntered}\n              updateCard={updateCard} />\n          )}\n\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,GAAG,QAAQ,cAAc;;AAElC;AACA,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAI5C,SAASC,GAAG,GAAG;EAAA;EAEb,MAAMC,IAAI,GAAE;IAEZC,MAAM,EAAE,CACN;MACEC,EAAE,EAAE,CAAC;MACLC,GAAG,EAAE,OAAO;MACZC,KAAK,EAAE,CAAC;QACNF,EAAE,EAAE,CAAC;QACLG,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,KAAK;QAClBC,GAAG,EAAE,KAAK;QACVC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC,EACD;QACER,EAAE,EAAE,CAAC;QACLG,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,KAAK;QAClBC,GAAG,EAAE,KAAK;QACVC,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IAEH,CAAC,EACD;MACER,EAAE,EAAE,CAAC;MACLC,GAAG,EAAE,YAAY;MACjBC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,EAAE,EAAE,CAAC;MACLC,GAAG,EAAE,MAAM;MACXC,KAAK,EAAE;IACT,CAAC;EAEL,CAAC;EAEC,MAAM,CAACH,MAAM,EAAEU,SAAS,CAAC,GAAGb,QAAQ,CAClCc,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAACf,IAAI,CAAC,CACnD;EAID,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC;IAC3CoB,GAAG,EAAE,EAAE;IACPC,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,CAAClB,EAAE,EAAEG,KAAK,KAAK;IACpC,MAAMgB,KAAK,GAAGpB,MAAM,CAACqB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKA,EAAE,CAAC;IACxD,IAAImB,KAAK,GAAG,CAAC,EAAE;IAEf,MAAMG,UAAU,GAAG,CAAC,GAAGvB,MAAM,CAAC;IAC9BuB,UAAU,CAACH,KAAK,CAAC,CAACjB,KAAK,CAACqB,IAAI,CAAC;MAC3BvB,EAAE,EAAEwB,IAAI,CAACC,GAAG,EAAE,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,CAAC;MAClCxB,KAAK;MACLyB,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACT,CAAC,CAAC;IACFrB,SAAS,CAACa,UAAU,CAAC;EACvB,CAAC;EAED,MAAMS,UAAU,GAAG,CAACf,GAAG,EAAEC,GAAG,KAAK;IAC/B,MAAME,KAAK,GAAGpB,MAAM,CAACqB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKgB,GAAG,CAAC;IACzD,IAAIG,KAAK,GAAG,CAAC,EAAE;IAEf,MAAMG,UAAU,GAAG,CAAC,GAAGvB,MAAM,CAAC;IAC9B,MAAMG,KAAK,GAAGoB,UAAU,CAACH,KAAK,CAAC,CAACjB,KAAK;IAErC,MAAM8B,SAAS,GAAG9B,KAAK,CAACkB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKiB,GAAG,CAAC;IAC5D,IAAIe,SAAS,GAAG,CAAC,EAAE;IAEnB9B,KAAK,CAAC+B,MAAM,CAACD,SAAS,EAAE,CAAC,CAAC;IAC1BE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IACd1B,SAAS,CAACa,UAAU,CAAC;EACvB,CAAC;EAED,MAAMc,SAAS,GAAG,CAACpB,GAAG,EAAEC,GAAG,KAAK;IAAA;IAC9B,IAAIoB,YAAY,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW;IACxDH,YAAY,GAAGtC,MAAM,CAACqB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKgB,GAAG,CAAC;IAC1D,IAAIqB,YAAY,GAAG,CAAC,EAAE;IAEtBC,WAAW,2BAAGvC,MAAM,CAACsC,YAAY,CAAC,kFAApB,qBAAsBnC,KAAK,0DAA3B,sBAA6BkB,SAAS,CACjDC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKiB,GAAG,CAC1B;IACD,IAAIqB,WAAW,GAAG,CAAC,EAAE;IAErBC,YAAY,GAAGxC,MAAM,CAACqB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKc,UAAU,CAACE,GAAG,CAAC;IACrE,IAAIuB,YAAY,GAAG,CAAC,EAAE;IAEtBC,WAAW,2BAAGzC,MAAM,CAACwC,YAAY,CAAC,kFAApB,qBAAsBrC,KAAK,0DAA3B,sBAA6BkB,SAAS,CACjDC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKc,UAAU,CAACG,GAAG,CACrC;IACD,IAAIuB,WAAW,GAAG,CAAC,EAAE;IAErB,MAAMlB,UAAU,GAAG,CAAC,GAAGvB,MAAM,CAAC;IAC9B,MAAM0C,UAAU,GAAGnB,UAAU,CAACe,YAAY,CAAC,CAACnC,KAAK,CAACoC,WAAW,CAAC;IAC9DhB,UAAU,CAACe,YAAY,CAAC,CAACnC,KAAK,CAAC+B,MAAM,CAACK,WAAW,EAAE,CAAC,CAAC;IACrDhB,UAAU,CAACiB,YAAY,CAAC,CAACrC,KAAK,CAAC+B,MAAM,CAACO,WAAW,EAAE,CAAC,EAAEC,UAAU,CAAC;IACjEhC,SAAS,CAACa,UAAU,CAAC;IAErBP,aAAa,CAAC;MACZC,GAAG,EAAE,EAAE;MACPC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC;EAED,MAAMyB,WAAW,GAAG,CAAC1B,GAAG,EAAEC,GAAG,KAAK;IAChC,IAAIH,UAAU,CAACG,GAAG,KAAKA,GAAG,EAAE;IAC5BF,aAAa,CAAC;MACZC,GAAG;MACHC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAM0B,UAAU,GAAG,CAAC3B,GAAG,EAAEC,GAAG,EAAE2B,IAAI,KAAK;IACrC,MAAMzB,KAAK,GAAGpB,MAAM,CAACqB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKgB,GAAG,CAAC;IACzD,IAAIG,KAAK,GAAG,CAAC,EAAE;IAEf,MAAMG,UAAU,GAAG,CAAC,GAAGvB,MAAM,CAAC;IAC9B,MAAMG,KAAK,GAAGoB,UAAU,CAACH,KAAK,CAAC,CAACjB,KAAK;IAErC,MAAM8B,SAAS,GAAG9B,KAAK,CAACkB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKiB,GAAG,CAAC;IAC5D,IAAIe,SAAS,GAAG,CAAC,EAAE;IAEnBV,UAAU,CAACH,KAAK,CAAC,CAACjB,KAAK,CAAC8B,SAAS,CAAC,GAAGY,IAAI;IAEzCnC,SAAS,CAACa,UAAU,CAAC;EACvB,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd,MAAMG,IAAI,GAAGY,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAIf,IAAI,IAAI,IAAI,EAAE;MAChBc,YAAY,CAACiC,OAAO,CAAC,MAAM,EAAEnC,IAAI,CAACoC,SAAS,CAAC/C,MAAM,CAAC,CAAC;IACtD;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBAGE;IAAK,SAAS,EAAEP,GAAI,kGAAkG;IAAA,wBACpH,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAEA,GAAI,qDAAqD;MAAA,uBACvE;QAAK,SAAS,EAAEA,GAAI,2CAA2C;QAAA,UAC5DM,IAAI,CAACC,MAAM,CAACgD,GAAG,CAACC,KAAK,iBACpB,QAAC,KAAK;UAEJ,KAAK,EAAEA,KAAM;UACb,OAAO,EAAE9B,cAAe;UACxB,UAAU,EAAEa,UAAW;UACvB,SAAS,EAAEK,SAAU;UACrB,WAAW,EAAEM,WAAY;UACzB,UAAU,EAAEC;QAAW,GANlBK,KAAK,CAAChD,EAAE;UAAA;UAAA;UAAA;QAAA,QAMa;MAC7B;QAAA;QAAA;QAAA;MAAA;IAEG;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV;AAAC,GAtKQH,GAAG;AAAA,KAAHA,GAAG;AAwKZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}