{"ast":null,"code":"var _jsxFileName = \"/Users/bryantrijo/Dev/React/kanban-board/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { css } from '@emotion/css';\n\n//Components\nimport Header from './components/ui/header';\nimport Board from './components/ui/board';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [setMain] = useState([]);\n  const main = {\n    boards: [{\n      id: 1,\n      key: \"To Do\",\n      cards: []\n    }, {\n      id: 2,\n      key: \"In process\",\n      cards: []\n    }, {\n      id: 3,\n      key: \"Done\",\n      cards: []\n    }]\n  };\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\"\n  });\n  useEffect(() => {\n    const boards = JSON.parse(localStorage.getItem('main'));\n    if (boards == null) {\n      localStorage.setItem('main', JSON.stringify(main));\n    }\n  });\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n  const dragEnded = (bid, cid) => {\n    var _boards$s_boardIndex, _boards$s_boardIndex$, _boards$t_boardIndex, _boards$t_boardIndex$;\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex(item => item.id === bid);\n    if (s_boardIndex < 0) return;\n    s_cardIndex = (_boards$s_boardIndex = boards[s_boardIndex]) === null || _boards$s_boardIndex === void 0 ? void 0 : (_boards$s_boardIndex$ = _boards$s_boardIndex.cards) === null || _boards$s_boardIndex$ === void 0 ? void 0 : _boards$s_boardIndex$.findIndex(item => item.id === cid);\n    if (s_cardIndex < 0) return;\n    t_boardIndex = boards.findIndex(item => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n    t_cardIndex = (_boards$t_boardIndex = boards[t_boardIndex]) === null || _boards$t_boardIndex === void 0 ? void 0 : (_boards$t_boardIndex$ = _boards$t_boardIndex.cards) === null || _boards$t_boardIndex$ === void 0 ? void 0 : _boards$t_boardIndex$.findIndex(item => item.id === targetCard.cid);\n    if (t_cardIndex < 0) return;\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n    setTargetCard({\n      bid: \"\",\n      cid: \"\"\n    });\n  };\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid\n    });\n  };\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    tempBoards[index].cards[cardIndex] = card;\n    setBoards(tempBoards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css`height: 100vh; width: 100%; display: flex; flex-direction: column; border-radius: 4px; gap:20px;`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`flex:1; width:100%; overflow-x:auto; padding: 20px;`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css`min-width: 100%; display: flex; gap:30px;`,\n        children: main.boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n          board: board,\n          addCard: addCardHandler,\n          removeCard: removeCard,\n          dragEnded: dragEnded,\n          dragEntered: dragEntered,\n          updateCard: updateCard\n        }, board.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PfsM8XFnxh4FtrAouQp47FiAYRg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","css","Header","Board","useEffect","useState","App","setMain","main","boards","id","key","cards","targetCard","setTargetCard","bid","cid","JSON","parse","localStorage","getItem","setItem","stringify","addCardHandler","title","index","findIndex","item","tempBoards","push","Date","now","Math","random","labels","date","tasks","setBoards","removeCard","cardIndex","splice","dragEnded","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","dragEntered","updateCard","card","map","board"],"sources":["/Users/bryantrijo/Dev/React/kanban-board/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { css } from '@emotion/css'\n\n//Components\nimport Header from './components/ui/header'\nimport Board from './components/ui/board'\nimport { useEffect, useState } from 'react';\n\n\n\nfunction App() {\n  const [ setMain] = useState([]);\n\n  const main = {\n    boards: [\n        {\n            id: 1,\n            key:  \"To Do\",\n            cards: []\n        },\n        {\n            id: 2,\n            key:  \"In process\",\n            cards: [ ]\n        },\n        {\n            id: 3,\n            key:  \"Done\",\n            cards: []\n        }\n    ]\n\n}\n\nconst [targetCard, setTargetCard] = useState({\n  bid: \"\",\n  cid: \"\",\n});\n\nuseEffect(() => {\n  const boards  = JSON.parse(localStorage.getItem('main'))\n  if(boards == null){\n    localStorage.setItem('main', JSON.stringify(main));\n  }\n})\nconst addCardHandler = (id, title) => {\n  const index = boards.findIndex((item) => item.id === id);\n  if (index < 0) return;\n\n  const tempBoards = [...boards];\n  tempBoards[index].cards.push({\n    id: Date.now() + Math.random() * 2,\n    title,\n    labels: [],\n    date: \"\",\n    tasks: [],\n  });\n  setBoards(tempBoards);\n};\n\nconst removeCard = (bid, cid) => {\n  const index = boards.findIndex((item) => item.id === bid);\n  if (index < 0) return;\n\n  const tempBoards = [...boards];\n  const cards = tempBoards[index].cards;\n\n  const cardIndex = cards.findIndex((item) => item.id === cid);\n  if (cardIndex < 0) return;\n\n  cards.splice(cardIndex, 1);\n  setBoards(tempBoards);\n};\n\nconst dragEnded = (bid, cid) => {\n  let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n  s_boardIndex = boards.findIndex((item) => item.id === bid);\n  if (s_boardIndex < 0) return;\n\n  s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n    (item) => item.id === cid\n  );\n  if (s_cardIndex < 0) return;\n\n  t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n  if (t_boardIndex < 0) return;\n\n  t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n    (item) => item.id === targetCard.cid\n  );\n  if (t_cardIndex < 0) return;\n\n  const tempBoards = [...boards];\n  const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n  tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n  tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n  setBoards(tempBoards);\n\n  setTargetCard({\n    bid: \"\",\n    cid: \"\",\n  });\n};\n\nconst dragEntered = (bid, cid) => {\n  if (targetCard.cid === cid) return;\n  setTargetCard({\n    bid,\n    cid,\n  });\n};\n\nconst updateCard = (bid, cid, card) => {\n  const index = boards.findIndex((item) => item.id === bid);\n  if (index < 0) return;\n\n  const tempBoards = [...boards];\n  const cards = tempBoards[index].cards;\n\n  const cardIndex = cards.findIndex((item) => item.id === cid);\n  if (cardIndex < 0) return;\n\n  tempBoards[index].cards[cardIndex] = card;\n\n  setBoards(tempBoards);\n};\n\n  return (\n\n    \n    <div className={css`height: 100vh; width: 100%; display: flex; flex-direction: column; border-radius: 4px; gap:20px;`}>\n      <Header />\n      <div className={css`flex:1; width:100%; overflow-x:auto; padding: 20px;`} >\n        <div className={css`min-width: 100%; display: flex; gap:30px;`} >\n          { main.boards.map(board =>\n            <Board  \n             key={board.id}\n            board={board}\n            addCard={addCardHandler}\n            removeCard={removeCard}\n            dragEnded={dragEnded}\n            dragEntered={dragEntered}\n            updateCard={updateCard} />\n          )}\n         \n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}